import 'package:flutter_riverpod/flutter_riverpod.dart';
import 'package:project/apis/project_data/get_project_by_user.dart';
import 'package:project/apis/project_data/insert_or_update_project_hd.dart';
import 'package:project/apis/project_data/delete_project_hd.dart';
import 'package:project/models/project_h_d_model.dart';

/// üîÅ ‡∏ï‡∏±‡∏ß‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ Project (‡πÇ‡∏´‡∏•‡∏î, ‡πÄ‡∏û‡∏¥‡πà‡∏°, ‡∏•‡∏ö, ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç)
class ProjectController {
  final Ref ref;
  ProjectController(this.ref);

  /// üîÑ ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏â‡∏û‡∏≤‡∏∞ categoryId ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
  Future<List<ProjectHDModel>> getProjects({String categoryId = '0'}) async {
    return await ref.read(apiGetProjectByUser).get(categoryId: categoryId);
  }

  /// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏´‡∏£‡∏∑‡∏≠‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå (project_id == '' ‡πÅ‡∏õ‡∏•‡∏ß‡πà‡∏≤ insert)
  Future<ProjectHDModel> addOrUpdateProject(Map<String, dynamic> body) async {
    return await ref.read(apiInsertOrUpdateProjectHD).post(body: body);
  }

  /// ‚ùå ‡∏•‡∏ö‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ï‡∏≤‡∏° ID
  Future<void> deleteProject(String projectId) async {
    await ref.read(apiDeleteProjectHD).delete(projectHDId: projectId);
  }
}

/// ‚úÖ Provider ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ProjectController
final projectControllerProvider = Provider<ProjectController>(
  (ref) => ProjectController(ref),
);

/// ‚úÖ FutureProvider ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
final projectListProvider = FutureProvider<List<ProjectHDModel>>((ref) async {
  return await ref.read(projectControllerProvider).getProjects();
});

/// ‚úÖ FutureProvider.family ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå‡∏ï‡∏≤‡∏° categoryId
final projectListByCategoryProvider = FutureProvider.family<List<ProjectHDModel>, String>((ref, categoryId) async {
  return await ref.read(projectControllerProvider).getProjects(categoryId: categoryId);
});
